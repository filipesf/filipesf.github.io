/* ==========================================================================
   UI PATTERNS
   ========================================================================== */

/// @group Patterns
/// @require {mixin} type-scale
/// @require {mixin} transition
/// @require {function} size
@mixin button($size: default) {
  @include type-scale(0);
  @include transition(default);
  text-decoration: none;
  cursor: pointer;

  @if $size == large {
    padding: size(2) size(4);
  } @else {
    padding: size(1) size(2);
  }
}

/// @group Patterns
/// @require {function} rem
/// @param $width [rem(1280)]
/// @param $margin [true]
@mixin wrapper($width: rem(1280), $margin: true) {
  width: 100%;
  max-width: $width;

  @if $margin {
    margin: 0 auto;
  }
}

/// @group Patterns
/// @require {function} size
/// @require {mixin} animation
/// @require {mixin} media-query
@mixin section {
  @include animation(intro, 5);
  padding: size(6) size(3);

  @include media-query(813) {
    padding: size(12);
  }

  @include media-query(1025) {
    min-height: 100vh;
  }

  @include media-query(1367) {
    min-height: auto;
  }
}

/// @group Patterns
/// @require {function} rem
/// @require {function} size
/// @require {mixin} rectangle
/// @require {mixin} media-query
/// @param {color} $color [black]
/// @param {alignment} $alignment [left]
/// @output Draws a dash bellow current element
@mixin dash($color: black, $alignment: left) {
  &:after {
    @include rectangle(rem(50), rem(4));
    content: '';
    display: block;
    margin-top: size(3);
    margin-bottom: size(3);
    background-color: $color;

    @if $alignment == left {
      margin-right: auto;
    } @else if $alignment == right {
      margin-left: auto;
    } @else {
      margin-right: auto;
      margin-left: auto;
    }

    @include media-query(813) {
      @include rectangle(rem(100), rem(8));
      margin-top: size(6);
      margin-bottom: size(6);
    }
  }
}

@mixin flat-shadow($color: base, $shade: dark, $border: 2) {
  border: rem($border) solid color($color, $shade);
  box-shadow: rem(6) rem(6) 0 color($color, $shade);
}
